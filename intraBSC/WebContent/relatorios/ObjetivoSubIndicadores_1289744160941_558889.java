/*
 * Generated by JasperReports - 14/11/10 12:16
 */
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.fill.*;

import java.util.*;
import java.math.*;
import java.text.*;
import java.io.*;
import java.net.*;

import net.sf.jasperreports.engine.*;
import java.util.*;
import net.sf.jasperreports.engine.data.*;


/**
 *
 */
public class ObjetivoSubIndicadores_1289744160941_558889 extends JREvaluator
{


    /**
     *
     */
    private JRFillParameter parameter_REPORT_LOCALE = null;
    private JRFillParameter parameter_REPORT_VIRTUALIZER = null;
    private JRFillParameter parameter_objetivo = null;
    private JRFillParameter parameter_REPORT_SCRIPTLET = null;
    private JRFillParameter parameter_REPORT_PARAMETERS_MAP = null;
    private JRFillParameter parameter_REPORT_CONNECTION = null;
    private JRFillParameter parameter_REPORT_CLASS_LOADER = null;
    private JRFillParameter parameter_REPORT_DATA_SOURCE = null;
    private JRFillParameter parameter_REPORT_URL_HANDLER_FACTORY = null;
    private JRFillParameter parameter_IS_IGNORE_PAGINATION = null;
    private JRFillParameter parameter_baseDir = null;
    private JRFillParameter parameter_REPORT_MAX_COUNT = null;
    private JRFillParameter parameter_REPORT_RESOURCE_BUNDLE = null;
    private JRFillField field_limiteinferior = null;
    private JRFillField field_mapa = null;
    private JRFillField field_idperspectiva = null;
    private JRFillField field_ultimoValor = null;
    private JRFillField field_nameOwner = null;
    private JRFillField field_fone = null;
    private JRFillField field_numObjetivo = null;
    private JRFillField field_descricao = null;
    private JRFillField field_meta = null;
    private JRFillField field_tarefas = null;
    private JRFillField field_nameMeasure = null;
    private JRFillField field_num = null;
    private JRFillField field_idmapa = null;
    private JRFillField field_nameObjective = null;
    private JRFillField field_ordem = null;
    private JRFillField field_email = null;
    private JRFillField field_inversaoLimite = null;
    private JRFillField field_limitesuperior = null;
    private JRFillField field_desvio = null;
    private JRFillField field_ultimaData = null;
    private JRFillField field_perspectiva = null;
    private JRFillField field_unidade = null;
    private JRFillVariable variable_PAGE_NUMBER = null;
    private JRFillVariable variable_COLUMN_NUMBER = null;
    private JRFillVariable variable_REPORT_COUNT = null;
    private JRFillVariable variable_PAGE_COUNT = null;
    private JRFillVariable variable_COLUMN_COUNT = null;
    private JRFillVariable variable_Measure_group_COUNT = null;


    /**
     *
     */
    public void customizedInit(
        Map pm,
        Map fm,
        Map vm
        )
    {
        initParams(pm);
        initFields(fm);
        initVars(vm);
    }


    /**
     *
     */
    private void initParams(Map pm)
    {
        parameter_REPORT_LOCALE = (JRFillParameter)pm.get("REPORT_LOCALE");
        parameter_REPORT_VIRTUALIZER = (JRFillParameter)pm.get("REPORT_VIRTUALIZER");
        parameter_objetivo = (JRFillParameter)pm.get("objetivo");
        parameter_REPORT_SCRIPTLET = (JRFillParameter)pm.get("REPORT_SCRIPTLET");
        parameter_REPORT_PARAMETERS_MAP = (JRFillParameter)pm.get("REPORT_PARAMETERS_MAP");
        parameter_REPORT_CONNECTION = (JRFillParameter)pm.get("REPORT_CONNECTION");
        parameter_REPORT_CLASS_LOADER = (JRFillParameter)pm.get("REPORT_CLASS_LOADER");
        parameter_REPORT_DATA_SOURCE = (JRFillParameter)pm.get("REPORT_DATA_SOURCE");
        parameter_REPORT_URL_HANDLER_FACTORY = (JRFillParameter)pm.get("REPORT_URL_HANDLER_FACTORY");
        parameter_IS_IGNORE_PAGINATION = (JRFillParameter)pm.get("IS_IGNORE_PAGINATION");
        parameter_baseDir = (JRFillParameter)pm.get("baseDir");
        parameter_REPORT_MAX_COUNT = (JRFillParameter)pm.get("REPORT_MAX_COUNT");
        parameter_REPORT_RESOURCE_BUNDLE = (JRFillParameter)pm.get("REPORT_RESOURCE_BUNDLE");
    }


    /**
     *
     */
    private void initFields(Map fm)
    {
        field_limiteinferior = (JRFillField)fm.get("limiteinferior");
        field_mapa = (JRFillField)fm.get("mapa");
        field_idperspectiva = (JRFillField)fm.get("idperspectiva");
        field_ultimoValor = (JRFillField)fm.get("ultimoValor");
        field_nameOwner = (JRFillField)fm.get("nameOwner");
        field_fone = (JRFillField)fm.get("fone");
        field_numObjetivo = (JRFillField)fm.get("numObjetivo");
        field_descricao = (JRFillField)fm.get("descricao");
        field_meta = (JRFillField)fm.get("meta");
        field_tarefas = (JRFillField)fm.get("tarefas");
        field_nameMeasure = (JRFillField)fm.get("nameMeasure");
        field_num = (JRFillField)fm.get("num");
        field_idmapa = (JRFillField)fm.get("idmapa");
        field_nameObjective = (JRFillField)fm.get("nameObjective");
        field_ordem = (JRFillField)fm.get("ordem");
        field_email = (JRFillField)fm.get("email");
        field_inversaoLimite = (JRFillField)fm.get("inversaoLimite");
        field_limitesuperior = (JRFillField)fm.get("limitesuperior");
        field_desvio = (JRFillField)fm.get("desvio");
        field_ultimaData = (JRFillField)fm.get("ultimaData");
        field_perspectiva = (JRFillField)fm.get("perspectiva");
        field_unidade = (JRFillField)fm.get("unidade");
    }


    /**
     *
     */
    private void initVars(Map vm)
    {
        variable_PAGE_NUMBER = (JRFillVariable)vm.get("PAGE_NUMBER");
        variable_COLUMN_NUMBER = (JRFillVariable)vm.get("COLUMN_NUMBER");
        variable_REPORT_COUNT = (JRFillVariable)vm.get("REPORT_COUNT");
        variable_PAGE_COUNT = (JRFillVariable)vm.get("PAGE_COUNT");
        variable_COLUMN_COUNT = (JRFillVariable)vm.get("COLUMN_COUNT");
        variable_Measure_group_COUNT = (JRFillVariable)vm.get("Measure_group_COUNT");
    }


    /**
     *
     */
    public Object evaluate(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 0 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 1 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 2 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 3 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 4 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 5 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 6 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 7 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 8 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 9 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 10 : 
            {
                value = (java.lang.Object)(((java.lang.String)field_nameMeasure.getValue()));
                break;
            }
            case 11 : 
            {
                value = (java.lang.String)(((java.lang.String)field_nameMeasure.getValue()));
                break;
            }
            case 12 : 
            {
                value = (java.lang.String)("Indicador");
                break;
            }
            case 13 : 
            {
                value = (java.lang.String)("../indicador/detalhar.do?op=indicadorRelatorioDetalha&codMapa=" + ((java.lang.Integer)field_idmapa.getValue()) + "&codPerspectiva=" + ((java.lang.Integer)field_idperspectiva.getValue()) + "&codIndicador=" + ((java.lang.Integer)field_num.getValue()));
                break;
            }
            case 14 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) < ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())&&
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) > ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue()) ));
                break;
            }
            case 15 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroAmarelo.gif"));
                break;
            }
            case 16 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 17 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVerde.gif"));
                break;
            }
            case 18 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 19 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVermelho.gif"));
                break;
            }
            case 20 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 1)&&((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 21 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVerde.gif"));
                break;
            }
            case 22 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 1)&&((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 23 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVermelho.gif"));
                break;
            }
            case 24 : 
            {
                value = (java.lang.String)(str("bsc.report.responsavel"));
                break;
            }
            case 25 : 
            {
                value = (java.lang.String)(str("bsc.report.desvio"));
                break;
            }
            case 26 : 
            {
                value = (java.lang.String)(str("bsc.report.ultimadata"));
                break;
            }
            case 27 : 
            {
                value = (java.lang.String)(str("bsc.report.unidade"));
                break;
            }
            case 28 : 
            {
                value = (java.lang.String)(str("bsc.report.limitesuperior"));
                break;
            }
            case 29 : 
            {
                value = (java.lang.String)(str("bsc.report.valor"));
                break;
            }
            case 30 : 
            {
                value = (java.lang.String)(str("bsc.report.limiteinferior"));
                break;
            }
            case 31 : 
            {
                value = (java.lang.String)(str("bsc.report.indicador"));
                break;
            }
            case 32 : 
            {
                value = (java.lang.String)(str("bsc.report.tarefa"));
                break;
            }
            case 33 : 
            {
                value = (java.lang.String)(str("bsc.report.mensuradoindicadores"));
                break;
            }
            case 34 : 
            {
                value = (java.util.Date)(((java.sql.Date)field_ultimaData.getValue()));
                break;
            }
            case 35 : 
            {
                value = (java.lang.String)(((java.lang.String)field_descricao.getValue()));
                break;
            }
            case 36 : 
            {
                value = (java.lang.String)(null);
                break;
            }
            case 37 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_limitesuperior.getValue()));
                break;
            }
            case 38 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_limiteinferior.getValue()));
                break;
            }
            case 39 : 
            {
                value = (java.lang.String)(((java.lang.String)field_nameOwner.getValue()));
                break;
            }
            case 40 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) < ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 41 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 42 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) < ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())&&
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) > ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue()) ));
                break;
            }
            case 43 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 44 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 45 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 46 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 1)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 47 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 48 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 1)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 49 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 50 : 
            {
                value = (java.lang.Boolean)(new Boolean(
 ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 51 : 
            {
                value = (java.lang.String)(((java.lang.String)field_unidade.getValue()));
                break;
            }
            case 52 : 
            {
                value = (java.lang.String)(((java.lang.String)field_tarefas.getValue()));
                break;
            }
            case 53 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_desvio.getValue()));
                break;
            }
            case 54 : 
            {
                value = (java.lang.String)(((java.lang.String)field_email.getValue()));
                break;
            }
            case 55 : 
            {
                value = (java.lang.String)(((java.lang.String)field_fone.getValue()));
                break;
            }
            case 56 : 
            {
                value = (java.lang.String)(((java.lang.String)field_meta.getValue()));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


    /**
     *
     */
    public Object evaluateOld(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 0 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 1 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 2 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 3 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 4 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 5 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 6 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 7 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 8 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 9 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 10 : 
            {
                value = (java.lang.Object)(((java.lang.String)field_nameMeasure.getOldValue()));
                break;
            }
            case 11 : 
            {
                value = (java.lang.String)(((java.lang.String)field_nameMeasure.getOldValue()));
                break;
            }
            case 12 : 
            {
                value = (java.lang.String)("Indicador");
                break;
            }
            case 13 : 
            {
                value = (java.lang.String)("../indicador/detalhar.do?op=indicadorRelatorioDetalha&codMapa=" + ((java.lang.Integer)field_idmapa.getOldValue()) + "&codPerspectiva=" + ((java.lang.Integer)field_idperspectiva.getOldValue()) + "&codIndicador=" + ((java.lang.Integer)field_num.getOldValue()));
                break;
            }
            case 14 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) < ((int)(((java.lang.Float)field_limitesuperior.getOldValue())).intValue())&&
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) > ((int)(((java.lang.Float)field_limiteinferior.getOldValue())).intValue()) ));
                break;
            }
            case 15 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroAmarelo.gif"));
                break;
            }
            case 16 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getOldValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getOldValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 17 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVerde.gif"));
                break;
            }
            case 18 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getOldValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getOldValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 19 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVermelho.gif"));
                break;
            }
            case 20 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getOldValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getOldValue()).intValue()) == 1)&&((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 21 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVerde.gif"));
                break;
            }
            case 22 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getOldValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getOldValue()).intValue()) == 1)&&((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 23 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVermelho.gif"));
                break;
            }
            case 24 : 
            {
                value = (java.lang.String)(str("bsc.report.responsavel"));
                break;
            }
            case 25 : 
            {
                value = (java.lang.String)(str("bsc.report.desvio"));
                break;
            }
            case 26 : 
            {
                value = (java.lang.String)(str("bsc.report.ultimadata"));
                break;
            }
            case 27 : 
            {
                value = (java.lang.String)(str("bsc.report.unidade"));
                break;
            }
            case 28 : 
            {
                value = (java.lang.String)(str("bsc.report.limitesuperior"));
                break;
            }
            case 29 : 
            {
                value = (java.lang.String)(str("bsc.report.valor"));
                break;
            }
            case 30 : 
            {
                value = (java.lang.String)(str("bsc.report.limiteinferior"));
                break;
            }
            case 31 : 
            {
                value = (java.lang.String)(str("bsc.report.indicador"));
                break;
            }
            case 32 : 
            {
                value = (java.lang.String)(str("bsc.report.tarefa"));
                break;
            }
            case 33 : 
            {
                value = (java.lang.String)(str("bsc.report.mensuradoindicadores"));
                break;
            }
            case 34 : 
            {
                value = (java.util.Date)(((java.sql.Date)field_ultimaData.getOldValue()));
                break;
            }
            case 35 : 
            {
                value = (java.lang.String)(((java.lang.String)field_descricao.getOldValue()));
                break;
            }
            case 36 : 
            {
                value = (java.lang.String)(null);
                break;
            }
            case 37 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_limitesuperior.getOldValue()));
                break;
            }
            case 38 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_limiteinferior.getOldValue()));
                break;
            }
            case 39 : 
            {
                value = (java.lang.String)(((java.lang.String)field_nameOwner.getOldValue()));
                break;
            }
            case 40 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) < ((int)(((java.lang.Float)field_limiteinferior.getOldValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getOldValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 41 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getOldValue()));
                break;
            }
            case 42 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) < ((int)(((java.lang.Float)field_limitesuperior.getOldValue())).intValue())&&
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) > ((int)(((java.lang.Float)field_limiteinferior.getOldValue())).intValue()) ));
                break;
            }
            case 43 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getOldValue()));
                break;
            }
            case 44 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getOldValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getOldValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 45 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getOldValue()));
                break;
            }
            case 46 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getOldValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getOldValue()).intValue()) == 1)&& ((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 47 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getOldValue()));
                break;
            }
            case 48 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getOldValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getOldValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getOldValue()).intValue()) == 1)&& ((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 49 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getOldValue()));
                break;
            }
            case 50 : 
            {
                value = (java.lang.Boolean)(new Boolean(
 ((((java.lang.String)field_nameObjective.getOldValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getOldValue())) != null)));
                break;
            }
            case 51 : 
            {
                value = (java.lang.String)(((java.lang.String)field_unidade.getOldValue()));
                break;
            }
            case 52 : 
            {
                value = (java.lang.String)(((java.lang.String)field_tarefas.getOldValue()));
                break;
            }
            case 53 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_desvio.getOldValue()));
                break;
            }
            case 54 : 
            {
                value = (java.lang.String)(((java.lang.String)field_email.getOldValue()));
                break;
            }
            case 55 : 
            {
                value = (java.lang.String)(((java.lang.String)field_fone.getOldValue()));
                break;
            }
            case 56 : 
            {
                value = (java.lang.String)(((java.lang.String)field_meta.getOldValue()));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


    /**
     *
     */
    public Object evaluateEstimated(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 0 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 1 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 2 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 3 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 4 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 5 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 6 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 7 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 8 : 
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 9 : 
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 10 : 
            {
                value = (java.lang.Object)(((java.lang.String)field_nameMeasure.getValue()));
                break;
            }
            case 11 : 
            {
                value = (java.lang.String)(((java.lang.String)field_nameMeasure.getValue()));
                break;
            }
            case 12 : 
            {
                value = (java.lang.String)("Indicador");
                break;
            }
            case 13 : 
            {
                value = (java.lang.String)("../indicador/detalhar.do?op=indicadorRelatorioDetalha&codMapa=" + ((java.lang.Integer)field_idmapa.getValue()) + "&codPerspectiva=" + ((java.lang.Integer)field_idperspectiva.getValue()) + "&codIndicador=" + ((java.lang.Integer)field_num.getValue()));
                break;
            }
            case 14 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) < ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())&&
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) > ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue()) ));
                break;
            }
            case 15 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroAmarelo.gif"));
                break;
            }
            case 16 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 17 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVerde.gif"));
                break;
            }
            case 18 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 19 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVermelho.gif"));
                break;
            }
            case 20 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 1)&&((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 21 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVerde.gif"));
                break;
            }
            case 22 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 1)&&((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 23 : 
            {
                value = (java.lang.String)(new String(((java.lang.String)parameter_baseDir.getValue())+"//WEB//imagens//relatorio//velocimetroVermelho.gif"));
                break;
            }
            case 24 : 
            {
                value = (java.lang.String)(str("bsc.report.responsavel"));
                break;
            }
            case 25 : 
            {
                value = (java.lang.String)(str("bsc.report.desvio"));
                break;
            }
            case 26 : 
            {
                value = (java.lang.String)(str("bsc.report.ultimadata"));
                break;
            }
            case 27 : 
            {
                value = (java.lang.String)(str("bsc.report.unidade"));
                break;
            }
            case 28 : 
            {
                value = (java.lang.String)(str("bsc.report.limitesuperior"));
                break;
            }
            case 29 : 
            {
                value = (java.lang.String)(str("bsc.report.valor"));
                break;
            }
            case 30 : 
            {
                value = (java.lang.String)(str("bsc.report.limiteinferior"));
                break;
            }
            case 31 : 
            {
                value = (java.lang.String)(str("bsc.report.indicador"));
                break;
            }
            case 32 : 
            {
                value = (java.lang.String)(str("bsc.report.tarefa"));
                break;
            }
            case 33 : 
            {
                value = (java.lang.String)(str("bsc.report.mensuradoindicadores"));
                break;
            }
            case 34 : 
            {
                value = (java.util.Date)(((java.sql.Date)field_ultimaData.getValue()));
                break;
            }
            case 35 : 
            {
                value = (java.lang.String)(((java.lang.String)field_descricao.getValue()));
                break;
            }
            case 36 : 
            {
                value = (java.lang.String)(null);
                break;
            }
            case 37 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_limitesuperior.getValue()));
                break;
            }
            case 38 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_limiteinferior.getValue()));
                break;
            }
            case 39 : 
            {
                value = (java.lang.String)(((java.lang.String)field_nameOwner.getValue()));
                break;
            }
            case 40 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) < ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 41 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 42 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) < ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())&&
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) > ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue()) ));
                break;
            }
            case 43 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 44 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 2)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 45 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 46 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) <= ((int)(((java.lang.Float)field_limiteinferior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 1)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 47 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 48 : 
            {
                value = (java.lang.Boolean)(new Boolean(
((int)(((java.lang.Float)field_ultimoValor.getValue()).intValue())) >= ((int)(((java.lang.Float)field_limitesuperior.getValue())).intValue())
&& ((int) (((java.lang.Integer)field_inversaoLimite.getValue()).intValue()) == 1)&& ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 49 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_ultimoValor.getValue()));
                break;
            }
            case 50 : 
            {
                value = (java.lang.Boolean)(new Boolean(
 ((((java.lang.String)field_nameObjective.getValue())) != null)
&& ((((java.lang.String)field_nameMeasure.getValue())) != null)));
                break;
            }
            case 51 : 
            {
                value = (java.lang.String)(((java.lang.String)field_unidade.getValue()));
                break;
            }
            case 52 : 
            {
                value = (java.lang.String)(((java.lang.String)field_tarefas.getValue()));
                break;
            }
            case 53 : 
            {
                value = (java.lang.Float)(((java.lang.Float)field_desvio.getValue()));
                break;
            }
            case 54 : 
            {
                value = (java.lang.String)(((java.lang.String)field_email.getValue()));
                break;
            }
            case 55 : 
            {
                value = (java.lang.String)(((java.lang.String)field_fone.getValue()));
                break;
            }
            case 56 : 
            {
                value = (java.lang.String)(((java.lang.String)field_meta.getValue()));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


}
